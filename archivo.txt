

Ejemplos de números enteros
2.3

420 (cuatrocientos veinte)
12 (doce)
2,711 (dos mil setecientos once)
40(cuarenta)
1 (uno)
-32 (menos treinta y dos)
1,000 (mil)
1.500.040 (un millï¿½n quinientos mil cuarenta)
-1 (menos uno)
932 (novecientos treinta y dos)
88 (ochenta y ocho)
1.000.000.000.000 (un billï¿½n)
52 (cincuenta y dos
-1.000.000 (menos un millï¿½n)
666 (seiscientos sesenta y seis)
7.412 (siete mil cuatrocientos doce)
4 (cuatro)
-326 (menos trescientos veintisï¿½is)
15 (quince)
0 (cero)
99 (noventa y nueve)

operadores aritmeticos
Operador	  Nombre    	Ejemplo
    +	       Suma  	    453+ 354
   -	       Diferencia	123-434
   *	       Producto	    673*904
   /	      Cociente	    290/770
   %	       Módulo	     20%7

operadores relacionales
Operador	nombre	ejemplo	significado
<	menor que	a<b	a es menor que b
>	mayor que	a>b	a es mayor que b
==	igual a	a==b	a es igual a b
!=	no igual a	a!=b	a no es igual a b
<=	menor que o igual a	a<=5	a es menor que o igual a b
>=	mayor que o igual a	a>=b	a es menor que o igual a b



PALABRAS RESERVADAS
['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class',
'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if',
'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']


VARIABLES VALIDAS

 x = 2.5


 2.5 = x
SyntaxError: can't assign to literal
Para que IDLE muestre el valor de una variable, basta con escribir su nombre:

 x = 2.5
 x
2.5
Si una variable no se ha definido previamente, escribir su nombre genera un mensaje de error:

 x = -10
 y = 13




import re 

path = "cuento.txt"

23.1

try:
	archivo = open(path,'r') #r --> modo lectura para el texto
except:
	print("el archivo que intentas abrir no existe")
	quit()

texto = ""

for linea in archivo:
	texto += linea

print(texto)


patron = r"\w+"
result = re.findall(patron,texto) # la re --> identifica una expresion regular
print("\n resultado de busqueda ", result)

patron = "\n"
result = re.split(patron,texto) #split --> divide un texto, en este caso
#por los espacios
print("\n resultado de busqueda ", result)

patron = "arquitectura"
result = re.sub(patron,"puerco araï¿½a", texto) #sub --> reemplaza
print("\n resultado de busqueda ", result)

3.5. Operadores relacionales
Los valores booleanos son ademï¿½s el resultado de expresiones que utilizan operadores relacionales (comparaciones entre valores):

3.5.1. Operador ==
El operador == evalua que los valores sean iguales para varios tipos de datos.

>>> 5 == 3
False
>>> 5 == 5
True
>>> "Plone" == 5
False
>>> "Plone" == "Plone"
True
>>> type("Plone") == str
True
3.5.2. Operador !=
El operador != evalua si los valores son distintos.

>>> 5 != 3
True
>>> "Plone" != 5
True
>>> "Plone" != False
True
3.5.3. Operador <
El operador < evalua si el valor del lado izquierdo es menor que el valor del lado derecho.

>>> 5 < 3
False
3.5.4. Operador >
El operador > evalua si el valor del lado izquierdo es mayor que el valor del lado derecho.

>>> 5 > 3
True
3.5.5. Operador <=
El operador <= evalua si el valor del lado izquierdo es menor o igual que el valor del lado derecho.

>>> 5 <= 3
False
3.5.6. Operador >=
El operador >= evalua si el valor del lado izquierdo es mayor o igual que el valor del lado derecho.

>>> 5 >= 3
True
3.5.7. Ejemplos
A continuaciï¿½n, se presentan algunos ejemplos de su uso:

Ejemplo de definir variables numéricas

a, b, a1, b1, c1 = 5, 5, 7, 3, 3
cadena1, cadena2 = 'Hola', 'Adiï¿½s'
lista1, lista2 = [1, 'Lista Python', 23], [11, 'Lista Python', 23]
Ejemplo de operador relacional Igual

c = a == b
print c

cadenas = cadena1 == cadena2
print cadenas

listas = lista1 == lista2
print listas
Ejemplo de operador relacional Diferente

d = a1 != b
print d

cadena0 = cadena1 != cadena2
print cadena0
Ejemplo de operador relacional Menor que

f = b1 < a1
print f
Ejemplo de operador relacional Mayor que

e = a1 > b1
print e
Ejemplo de operador relacional Menor o igual que

h = b1 <= c1
print h
Ejemplo de operador relacional Mayor o igual que

g = b1 >= c1
print g
